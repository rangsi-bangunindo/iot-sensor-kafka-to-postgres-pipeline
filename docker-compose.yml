version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  producer:
    build:
      context: .
      dockerfile: docker/producer/Dockerfile
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    volumes:
      - .:/app
    working_dir: /app
    command: ["python", "scripts/producer.py"]

    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep producer.py"]
      interval: 30s
      timeout: 10s
      retries: 5

  consumer:
    build:
      context: .
      dockerfile: docker/consumer/Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_CONSUMER_GROUP=${KAFKA_CONSUMER_GROUP}
      - KAFKA_DEAD_LETTER_TOPIC=${KAFKA_DEAD_LETTER_TOPIC}
    volumes:
      - .:/app
    working_dir: /app
    command: ["python", "scripts/consumer.py"]

    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep consumer.py"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
